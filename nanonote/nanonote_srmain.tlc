%selectfile NULL_FILE

%function FcnSingleTaskingMain() void
  
  %if GenerateSampleERTMain
    %assign ::CompiledModel.GenerateSampleERTMain = TLC_FALSE
    %warning Overriding example ert_main.c!
  %endif

  %assign cFile = LibCreateSourceFile("Source", "Custom", "ert_main")

  %openfile tmpBuf
  static boolean_T OverrunFlag = 0;\
  
  %<SLibDeclareFcnProtoCtlVariables()>\
  
  %<LibWriteModelData()>\
  %closefile tmpBuf
  
  %<LibSetSourceFileSection(cFile, "Definitions", tmpBuf)>
  
  %openfile tmpBuf
  #include "%<LibGetMdlPubHdrBaseName()>.h"
  #include <stdio.h> /* for printf() */
  %closefile tmpBuf
 
  %<LibSetSourceFileSection(cFile, "Includes", tmpBuf)>
  
  %openfile tmpBuf
  %assign fcnReturns = "void"
  %assign fcnName = "rt_OneStep"
  %assign fcnParams = ""
  %assign fcnCategory = "main"
  %createrecord fcnRec {Name fcnName; Returns fcnReturns; Params fcnParams; ...
    Abstract ""; Category fcnCategory; GeneratedBy "bareboard_srmain.tlc"; ...
    Type "Utility"}
  %<SLibDumpFunctionBanner(fcnRec)>
  %undef fcnRec
  %<fcnReturns> %<fcnName>(%<fcnParams>)
  {
    /* Disable interrupts here */
    
    /* Check for overun */
    if (OverrunFlag++) {
      %<LibSetRTModelErrorStatus("\"Overrun\"")>;
      return;
    }
    
    /* Save FPU context here (if necessary) */
    /* Re-enable timer or interrupt here */
    %if !IsModelReferenceTarget()
    %assign varsbuf = LibWriteModelInputs()
    %if varsbuf != ""
      /* Remove conditional, and set model inputs here */
      %<varsbuf>\
    %endif
    %endif
    
    %<LibCallModelStep(0)>\
    
    %if !IsModelReferenceTarget()
    %assign varsbuf = LibWriteModelOutputs()
    %if varsbuf != ""
      /* Remove conditional, and get model outputs here */
      %<varsbuf>\
    %endif
    %endif
    
    OverrunFlag--;
    
    /* Disable interrupts here */
    /* Restore FPU context here (if necessary) */
    /* Enable interrupts here */
  }
   
  %assign fcnReturns = "int_T"
  %assign fcnName = "main"
  %assign fcnParams = "int_T argc, const char_T *argv[]"
  %assign fcnCategory = "main"
  %createrecord fcnRec {Name fcnName; Returns fcnReturns; Params fcnParams; ...
    Abstract ""; Category fcnCategory; GeneratedBy "bareboard_srmain.tlc"; ...
    Type "Main"}
  %<SLibDumpFunctionBanner(fcnRec)>
  %undef fcnRec
  %<fcnReturns> %<fcnName>(%<fcnParams>)
  {
    /* Initialize model */
    %<LibCallModelInitialize()>\
    
    /* Associate rt_OneStep() with a timer that executes at the base rate of the model */

    int i;
    for (i = 0; i++; i<2000)
    {
      rt_OneStep();
    }
    
    printf("Good job!\n");
    %<LibCallModelTerminate()>\
    return 0;
  }
  %closefile tmpBuf
  
  %<LibSetSourceFileSection(cFile, "Functions", tmpBuf)>
  
%endfunction

%<FcnSingleTaskingMain()>