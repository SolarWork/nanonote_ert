This is a custom Embedded Coder Target for Ben NanoNote, small but capable computing device.
See http://en.qi-hardware.com/wiki/Ben_NanoNote for more details about this device.
See http://www.mathworks.com/products/embedded-coder/ for more info about Simulink/Embedded Coder.

Steps to install:
1) Download OpenWrt toolchain tailored for Ben NanoNote here:
http://downloads.qi-hardware.com/software/images/NanoNote/Ben/latest/
Choose the file which name starts with "OpenWrt-Toolchain-xburst..." and suitable for your architecture (i686 or x86_64).
Alternatively, build your own toolchain following the steps here:
http://en.qi-hardware.com/wiki/Building_Software_Image

2) Run in MATLAB command prompt:
addpref('nanonote','TOOLCHAIN_PREFIX','/your/path/to/toolchain-mipsel_gcc-4.5-linaro_uClibc-0.9.32/bin/mipsel-openwrt-linux-');
addpref('nanonote','STAGING_DIR','/your/path/to/toolchain-mipsel_gcc-4.5-linaro_uClibc-0.9.32');
The STAGING_DIR is required for OpenWrt-based toolchain. It seems that STAGING_DIR is only required if you are usign the Openwrt toolchain from Openwrt build root (directory).

3) Add an entry to /etc/hosts to avoid using Ben NanoNote IP (for your convenience).
Set up a passwordless login for Ben NanoNote:
ssh ben 'cat >>/etc/dropbear/authorized_keys' <~/.ssh/id_rsa.pub
Verify that you can login into Ben by typing "ssh ben" (or whatever name you gave it) in your shell.
Run in MATLAB command prompt:
addpref('nanonote','HOSTNAME','ben');

4) Add 'nanonote' directory and subdirectories to your MATLAB path.
Run 'sl_refresh_customizations' or restart MATLAB.

You may have a look at nanonote_setup.m for examples of steps 2-4.

Supported features of this target support package:
- Generate Standalone executables (not real time) to run on Ben
- PIL (Processor-in-the-Loop) Simulation:
 * Top level PIL
 * Model Block PIL
 * Subsystem PIL
- External mode

- Required MathWorks products:
 * MATLAB
 * Simulink
 * Embedded Coder
